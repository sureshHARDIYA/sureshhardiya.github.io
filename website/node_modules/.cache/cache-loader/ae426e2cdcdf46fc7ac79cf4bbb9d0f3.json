{"remainingRequest":"/Users/sureshkumarmukhiyahvl/Documents/Projects/sureshhardiya.github.io/website/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/sureshkumarmukhiyahvl/Documents/Projects/sureshhardiya.github.io/website/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/sureshkumarmukhiyahvl/Documents/Projects/sureshhardiya.github.io/website/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js","mtime":1581251181811},{"path":"/Users/sureshkumarmukhiyahvl/Documents/Projects/sureshhardiya.github.io/website/node_modules/cache-loader/dist/cjs.js","mtime":1581251179591},{"path":"/Users/sureshkumarmukhiyahvl/Documents/Projects/sureshhardiya.github.io/website/node_modules/babel-loader/lib/index.js","mtime":1569869568416}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3N1cmVzaGt1bWFybXVraGl5YWh2bC9Eb2N1bWVudHMvUHJvamVjdHMvc3VyZXNoaGFyZGl5YS5naXRodWIuaW8vd2Vic2l0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7LyoqCiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3Qse3VzZUVmZmVjdCx1c2VTdGF0ZSx1c2VSZWZ9ZnJvbSdyZWFjdCc7aW1wb3J0IGNsYXNzbmFtZXMgZnJvbSdjbGFzc25hbWVzJztpbXBvcnQgSGlnaGxpZ2h0LHtkZWZhdWx0UHJvcHN9ZnJvbSdwcmlzbS1yZWFjdC1yZW5kZXJlcic7aW1wb3J0IGRlZmF1bHRUaGVtZSBmcm9tJ3ByaXNtLXJlYWN0LXJlbmRlcmVyL3RoZW1lcy9wYWxlbmlnaHQnO2ltcG9ydCBDbGlwYm9hcmQgZnJvbSdjbGlwYm9hcmQnO2ltcG9ydCByYW5nZVBhcnNlciBmcm9tJ3BhcnNlLW51bWVyaWMtcmFuZ2UnO2ltcG9ydCB1c2VEb2N1c2F1cnVzQ29udGV4dCBmcm9tJ0Bkb2N1c2F1cnVzL3VzZURvY3VzYXVydXNDb250ZXh0JztpbXBvcnQgc3R5bGVzIGZyb20nLi9zdHlsZXMubW9kdWxlLmNzcyc7Y29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4PS97KFtcZCwtXSspfS87ZXhwb3J0IGRlZmF1bHQoKHtjaGlsZHJlbixjbGFzc05hbWU6bGFuZ3VhZ2VDbGFzc05hbWUsbWV0YXN0cmluZ30pPT57Y29uc3R7c2l0ZUNvbmZpZzp7dGhlbWVDb25maWc6e3ByaXNtPXt9fX19PXVzZURvY3VzYXVydXNDb250ZXh0KCk7Y29uc3Rbc2hvd0NvcGllZCxzZXRTaG93Q29waWVkXT11c2VTdGF0ZShmYWxzZSk7Y29uc3QgdGFyZ2V0PXVzZVJlZihudWxsKTtjb25zdCBidXR0b249dXNlUmVmKG51bGwpO2xldCBoaWdobGlnaHRMaW5lcz1bXTtpZihtZXRhc3RyaW5nJiZoaWdobGlnaHRMaW5lc1JhbmdlUmVnZXgudGVzdChtZXRhc3RyaW5nKSl7Y29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZT1tZXRhc3RyaW5nLm1hdGNoKGhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleClbMV07aGlnaGxpZ2h0TGluZXM9cmFuZ2VQYXJzZXIucGFyc2UoaGlnaGxpZ2h0TGluZXNSYW5nZSkuZmlsdGVyKG49Pm4+MCk7fXVzZUVmZmVjdCgoKT0+e2xldCBjbGlwYm9hcmQ7aWYoYnV0dG9uLmN1cnJlbnQpe2NsaXBib2FyZD1uZXcgQ2xpcGJvYXJkKGJ1dHRvbi5jdXJyZW50LHt0YXJnZXQ6KCk9PnRhcmdldC5jdXJyZW50fSk7fXJldHVybigpPT57aWYoY2xpcGJvYXJkKXtjbGlwYm9hcmQuZGVzdHJveSgpO319O30sW2J1dHRvbi5jdXJyZW50LHRhcmdldC5jdXJyZW50XSk7bGV0IGxhbmd1YWdlPWxhbmd1YWdlQ2xhc3NOYW1lJiZsYW5ndWFnZUNsYXNzTmFtZS5yZXBsYWNlKC9sYW5ndWFnZS0vLCcnKTtpZighbGFuZ3VhZ2UmJnByaXNtLmRlZmF1bHRMYW5ndWFnZSl7bGFuZ3VhZ2U9cHJpc20uZGVmYXVsdExhbmd1YWdlO31jb25zdCBoYW5kbGVDb3B5Q29kZT0oKT0+e3dpbmRvdy5nZXRTZWxlY3Rpb24oKS5lbXB0eSgpO3NldFNob3dDb3BpZWQodHJ1ZSk7c2V0VGltZW91dCgoKT0+c2V0U2hvd0NvcGllZChmYWxzZSksMjAwMCk7fTtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChIaWdobGlnaHQsX2V4dGVuZHMoe30sZGVmYXVsdFByb3BzLHt0aGVtZTpwcmlzbS50aGVtZXx8ZGVmYXVsdFRoZW1lLGNvZGU6Y2hpbGRyZW4udHJpbSgpLGxhbmd1YWdlOmxhbmd1YWdlfSksKHtjbGFzc05hbWUsc3R5bGUsdG9rZW5zLGdldExpbmVQcm9wcyxnZXRUb2tlblByb3BzfSk9PlJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTpzdHlsZXMuY29kZUJsb2NrV3JhcHBlcn0sUmVhY3QuY3JlYXRlRWxlbWVudCgicHJlIix7cmVmOnRhcmdldCxjbGFzc05hbWU6Y2xhc3NuYW1lcyhjbGFzc05hbWUsc3R5bGVzLmNvZGVCbG9jayksc3R5bGU6c3R5bGV9LHRva2Vucy5tYXAoKGxpbmUsaSk9Pntjb25zdCBsaW5lUHJvcHM9Z2V0TGluZVByb3BzKHtsaW5lLGtleTppfSk7aWYoaGlnaGxpZ2h0TGluZXMuaW5jbHVkZXMoaSsxKSl7bGluZVByb3BzLmNsYXNzTmFtZT1gJHtsaW5lUHJvcHMuY2xhc3NOYW1lfSBkb2N1c2F1cnVzLWhpZ2hsaWdodC1jb2RlLWxpbmVgO31yZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IixfZXh0ZW5kcyh7a2V5Oml9LGxpbmVQcm9wcyksbGluZS5tYXAoKHRva2VuLGtleSk9PlJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLF9leHRlbmRzKHtrZXk6a2V5fSxnZXRUb2tlblByb3BzKHt0b2tlbixrZXl9KSkpKSk7fSkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIse3JlZjpidXR0b24sdHlwZToiYnV0dG9uIiwiYXJpYS1sYWJlbCI6IkNvcHkgY29kZSB0byBjbGlwYm9hcmQiLGNsYXNzTmFtZTpzdHlsZXMuY29weUJ1dHRvbixvbkNsaWNrOmhhbmRsZUNvcHlDb2RlfSxzaG93Q29waWVkPydDb3BpZWQnOidDb3B5JykpKTt9KTs="},{"version":3,"sources":["/Users/sureshkumarmukhiyahvl/Documents/Projects/sureshhardiya.github.io/website/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","classnames","Highlight","defaultProps","defaultTheme","Clipboard","rangeParser","useDocusaurusContext","styles","highlightLinesRangeRegex","children","className","languageClassName","metastring","siteConfig","themeConfig","prism","showCopied","setShowCopied","target","button","highlightLines","test","highlightLinesRange","match","parse","filter","n","clipboard","current","destroy","language","replace","defaultLanguage","handleCopyCode","window","getSelection","empty","setTimeout","theme","trim","style","tokens","getLineProps","getTokenProps","codeBlockWrapper","codeBlock","map","line","i","lineProps","key","includes","token","copyButton"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {useEffect, useState, useRef} from 'react';\nimport classnames from 'classnames';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport defaultTheme from 'prism-react-renderer/themes/palenight';\nimport Clipboard from 'clipboard';\nimport rangeParser from 'parse-numeric-range';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport styles from './styles.module.css';\n\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\n\nexport default ({children, className: languageClassName, metastring}) => {\n  const {\n    siteConfig: {\n      themeConfig: {prism = {}},\n    },\n  } = useDocusaurusContext();\n  const [showCopied, setShowCopied] = useState(false);\n  const target = useRef(null);\n  const button = useRef(null);\n  let highlightLines = [];\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser.parse(highlightLinesRange).filter(n => n > 0);\n  }\n\n  useEffect(() => {\n    let clipboard;\n\n    if (button.current) {\n      clipboard = new Clipboard(button.current, {\n        target: () => target.current,\n      });\n    }\n\n    return () => {\n      if (clipboard) {\n        clipboard.destroy();\n      }\n    };\n  }, [button.current, target.current]);\n\n  let language =\n    languageClassName && languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  }\n\n  const handleCopyCode = () => {\n    window.getSelection().empty();\n    setShowCopied(true);\n\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      theme={prism.theme || defaultTheme}\n      code={children.trim()}\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <div className={styles.codeBlockWrapper}>\n          <pre\n            ref={target}\n            className={classnames(className, styles.codeBlock)}\n            style={style}>\n            {tokens.map((line, i) => {\n              const lineProps = getLineProps({line, key: i});\n\n              if (highlightLines.includes(i + 1)) {\n                lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n              }\n\n              return (\n                <div key={i} {...lineProps}>\n                  {line.map((token, key) => (\n                    <span key={key} {...getTokenProps({token, key})} />\n                  ))}\n                </div>\n              );\n            })}\n          </pre>\n          <button\n            ref={button}\n            type=\"button\"\n            aria-label=\"Copy code to clipboard\"\n            className={styles.copyButton}\n            onClick={handleCopyCode}>\n            {showCopied ? 'Copied' : 'Copy'}\n          </button>\n        </div>\n      )}\n    </Highlight>\n  );\n};\n"]}]}